name: App CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      POSTGRES_HOST: localhost
      POSTGRES_USER: 'Admin'
      POSTGRES_PASSWORD: 'Admin'
      POSTGRES_DB: 'orders'
      POSTGRES_PORT: 5432

    services:
      database:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests with Pytests
      env:
        DATABASE_NAME: ${{ env.POSTGRES_DB }}
        DATABASE_USER: ${{ env.POSTGRES_USER }}
        DATABASE_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        DATABASE_HOST: ${{ env.POSTGRES_HOST }}
        DATABASE_PORT: ${{ env.POSTGRES_PORT }}

      run: |
        pip install pytest pytest-django pytest-cov 
        export DJANGO_SETTINGS_MODULE=commerce.settings
        pytest api/tests/tests.py --cov=api  --cov-report=html

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: ./coverage
